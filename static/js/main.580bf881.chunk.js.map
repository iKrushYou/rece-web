{"version":3,"sources":["hooks/useLocalStorage.tsx","functions/utils.ts","hooks/useAppData.tsx","Layout.tsx","ItemsTab.tsx","PeopleTab.tsx","App.tsx","index.tsx"],"names":["useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","nameToInitials","name","toUpperCase","split","map","part","substr","join","setify","array","Set","appDataDefaults","items","people","personToItemsMap","itemToPeopleMap","tip","tax","noop","AppDataContext","createContext","appData","setAppData","reset","putItem","removeItem","splitItem","addPerson","removePerson","handleSetItemPerson","itemCostMap","subTotal","total","subTotalForPerson","taxForPerson","tipForPerson","totalForPerson","AppDataContextProvider","children","useMemo","reduce","curr","id","cost","previousValue","currentValue","currency","add","dollars","personId","sum","itemId","divide","length","percentForPerson","multiply","Provider","newItem","prev","filter","find","splitCount","parseInt","prompt","format","isNaN","newItems","Array","fill","_","index","uuidv4","newPerson","person","selected","_itemId","_personId","useAppData","useContext","useStyles","makeStyles","theme","offset","mixins","toolbar","Layout","classes","Box","style","paddingBottom","AppBar","position","Toolbar","Typography","variant","flexGrow","Button","onClick","confirm","color","className","itemEntryFormDefaults","undefined","ItemsTab","useForm","defaultValues","control","handleSubmit","nameFieldRef","useRef","costFieldRef","handleOnSubmit","current","focus","handleOnKeyDown","event","code","useTheme","Grid","container","spacing","xs","onSubmit","alignItems","md","render","field","TextField","inputRef","ref","label","fullWidth","onKeyDown","type","rules","required","min","overflow","Table","TableHead","TableRow","top","backgroundColor","zIndex","TableCell","left","minWidth","width","Avatar","height","fontSize","TableBody","whiteSpace","paddingTop","palette","warning","light","onChange","formatValue","display","IconButton","size","edge","marginRight","Checkbox","checked","includes","target","disabled","taxPct","toFixed","tipPct","location","href","txn","user","amount","note","getVenmoPaymentLink","EditableNumberField","isEditMode","setIsEditMode","textFieldRef","useLayoutEffect","placeholder","parseFloat","onBlur","marginLeft","PeopleTab","personNameInput","setPersonNameInput","handleAddPerson","trim","List","ListItem","ListItemAvatar","ListItemText","primary","ListItemSecondaryAction","App","currentTab","setCurrentTab","Container","Tabs","indicatorColor","textColor","centered","marginBottom","Tab","ReactDOM","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.580bf881.chunk.js","sourcesContent":["import { Dispatch, SetStateAction, useState } from 'react';\n\nfunction useLocalStorage<T>(key: string, initialValue: T): [T, Dispatch<SetStateAction<T>>] {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState<T>(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      // eslint-disable-next-line no-console\n      console.log(error);\n      return initialValue;\n    }\n  });\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value: T | ((val: T) => T)) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      // eslint-disable-next-line no-console\n      console.log(error);\n    }\n  };\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage;\n","export const nameToInitials = (name: string): string => {\n  return name\n    .toUpperCase()\n    .split(' ')\n    .map((part) => part.substr(0, 1))\n    .join('');\n};\n\nexport const indexArray = (length: number): number[] => new Array(length).fill(0).map((_, index) => index);\n\nexport const setify = <T>(array: T[]): T[] => [...new Set(array)];\n\nexport const calcPercent = (numerator: number, denominator: number, toFixed = 2): string => {\n  if (isNaN(numerator) || isNaN(denominator) || denominator === 0) return (0).toFixed(2);\n  return ((numerator / denominator) * 100.0).toFixed(toFixed);\n};\n","import useLocalStorage from './useLocalStorage';\nimport ReceiptItem from '../types/ReceiptItem';\nimport Person from '../types/Person';\nimport { indexArray, setify } from '../functions/utils';\nimport React, { createContext, Dispatch, FunctionComponent, SetStateAction, useContext, useMemo } from 'react';\nimport currency from 'currency.js';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport interface AppDataEntity {\n  items: ReceiptItem[];\n  people: Person[];\n  personToItemsMap: Record<string, string[]>;\n  itemToPeopleMap: Record<string, string[]>;\n  tip: number;\n  tax: number;\n}\n\nconst appDataDefaults = {\n  items: [],\n  people: [],\n  personToItemsMap: {},\n  itemToPeopleMap: {},\n  tip: 0,\n  tax: 0,\n};\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => {};\n\ninterface AppDataContextProps {\n  appData: AppDataEntity;\n  setAppData: Dispatch<SetStateAction<AppDataEntity>>;\n  reset: () => void;\n  putItem: (newItem: ReceiptItem) => void;\n  removeItem: (itemId: string) => void;\n  splitItem: (itemId: string) => void;\n  addPerson: (newPerson: Person) => void;\n  removePerson: (personId: string) => void;\n  handleSetItemPerson: (itemId: string, personId: string, selected: boolean) => void;\n  itemCostMap: Record<string, number>;\n  subTotal: number;\n  total: number;\n  subTotalForPerson: (personId: string) => number;\n  taxForPerson: (personId: string) => number;\n  tipForPerson: (personId: string) => number;\n  totalForPerson: (personId: string) => number;\n}\n\nconst AppDataContext = createContext<AppDataContextProps>({\n  appData: appDataDefaults,\n  setAppData: noop,\n  reset: noop,\n  putItem: noop,\n  removeItem: noop,\n  splitItem: noop,\n  addPerson: noop,\n  removePerson: noop,\n  handleSetItemPerson: noop,\n  itemCostMap: {},\n  subTotal: 0,\n  total: 0,\n  subTotalForPerson: () => 0,\n  taxForPerson: () => 0,\n  tipForPerson: () => 0,\n  totalForPerson: () => 0,\n});\n\nexport const AppDataContextProvider: FunctionComponent = ({ children }) => {\n  const [appData, setAppData] = useLocalStorage<AppDataEntity>('appData', appDataDefaults);\n\n  const reset = () => {\n    setAppData(appDataDefaults);\n  };\n\n  const putItem = (newItem: ReceiptItem) => {\n    setAppData((prev) => ({ ...prev, items: [...prev.items.filter((item) => item.id !== newItem.id), newItem] }));\n  };\n\n  const removeItem = (itemId: string) => {\n    setAppData((prev) => ({ ...prev, items: prev.items.filter((item) => item.id !== itemId) }));\n  };\n\n  const splitItem = (itemId: string) => {\n    const item = appData.items.find((item) => item.id === itemId);\n    if (!item) return;\n    const splitCount = parseInt(\n      prompt(`How many items should (${item.name} - ${currency(item.cost).format()}) be split into?`) || '',\n    );\n    if (!splitCount || isNaN(splitCount)) return;\n    const newItems: ReceiptItem[] = indexArray(splitCount).map(() => ({\n      id: uuidv4(),\n      name: item.name,\n      cost: item.cost / splitCount,\n    }));\n    setAppData((prev) => ({ ...prev, items: [...prev.items.filter((item) => item.id !== itemId), ...newItems] }));\n  };\n\n  const addPerson = (newPerson: Person) => {\n    setAppData((prev) => ({ ...prev, people: [...prev.people, newPerson] }));\n  };\n\n  const removePerson = (personId: string) => {\n    setAppData((prev) => ({ ...prev, people: prev.people.filter((person) => person.id !== personId) }));\n  };\n\n  const handleSetItemPerson = (itemId: string, personId: string, selected: boolean) => {\n    setAppData((prev) => {\n      const { personToItemsMap, itemToPeopleMap } = prev;\n      if (!personToItemsMap[personId]) personToItemsMap[personId] = [];\n      if (selected) {\n        personToItemsMap[personId] = setify([...personToItemsMap[personId], itemId]);\n      } else {\n        personToItemsMap[personId] = personToItemsMap[personId].filter((_itemId) => _itemId !== itemId);\n      }\n      if (!itemToPeopleMap[itemId]) itemToPeopleMap[itemId] = [];\n      if (selected) {\n        itemToPeopleMap[itemId] = setify([...itemToPeopleMap[itemId], personId]);\n      } else {\n        itemToPeopleMap[itemId] = itemToPeopleMap[itemId].filter((_personId) => _personId !== personId);\n      }\n      return { ...prev, personToItemsMap, itemToPeopleMap };\n    });\n  };\n\n  const itemCostMap = useMemo<Record<string, number>>(() => {\n    return appData.items.reduce((map, curr) => ({ ...map, [curr.id]: curr.cost }), {});\n  }, [appData.items]);\n\n  const subTotal = useMemo(\n    () =>\n      appData.items.reduce(\n        (previousValue, currentValue) => currency(previousValue).add(currentValue.cost).dollars(),\n        0,\n      ),\n    [appData.items],\n  );\n\n  const total = currency(subTotal).add(appData.tax).add(appData.tip).dollars();\n\n  const subTotalForPerson = (personId: string) =>\n    appData.personToItemsMap[personId]?.reduce(\n      (sum, itemId) =>\n        currency(sum).add(currency(itemCostMap[itemId]).divide(appData.itemToPeopleMap[itemId].length)).dollars(),\n      0,\n    ) || 0;\n\n  const percentForPerson = (personId: string) => subTotalForPerson(personId) / subTotal;\n\n  const taxForPerson = (personId: string) => currency(appData.tax).multiply(percentForPerson(personId)).dollars();\n  const tipForPerson = (personId: string) => currency(appData.tip).multiply(percentForPerson(personId)).dollars();\n\n  const totalForPerson = (personId: string) =>\n    currency(subTotalForPerson(personId)).add(taxForPerson(personId)).add(tipForPerson(personId)).dollars();\n\n  return (\n    <AppDataContext.Provider\n      value={{\n        appData,\n        setAppData,\n        reset,\n        putItem,\n        removeItem,\n        splitItem,\n        addPerson,\n        removePerson,\n        handleSetItemPerson,\n        itemCostMap,\n        subTotal,\n        total,\n        subTotalForPerson,\n        taxForPerson,\n        tipForPerson,\n        totalForPerson,\n      }}\n    >\n      {children}\n    </AppDataContext.Provider>\n  );\n};\n\nconst useAppData = (): AppDataContextProps => useContext(AppDataContext);\nexport default useAppData;\n","import React, { FunctionComponent } from 'react';\nimport { AppBar, Box, Button, makeStyles, Toolbar, Typography } from '@material-ui/core';\nimport useAppData from './hooks/useAppData';\n\nconst useStyles = makeStyles((theme) => ({\n  offset: theme.mixins.toolbar,\n}));\n\nconst Layout: FunctionComponent = ({ children }) => {\n  const classes = useStyles();\n\n  const { reset } = useAppData();\n\n  const handleReset = () => {\n    if (confirm(\"Are you sure you'd like to reset?\")) reset();\n  };\n\n  return (\n    <Box style={{ paddingBottom: 500 }}>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          {/*<IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">*/}\n          {/*  <MenuIcon />*/}\n          {/*</IconButton>*/}\n          <Typography variant=\"h6\" style={{ flexGrow: 1 }}>\n            Rece\n          </Typography>\n          <Button onClick={handleReset} style={{ color: 'inherit' }}>\n            Reset\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <Box className={classes.offset} />\n      {children}\n    </Box>\n  );\n};\n\nexport default Layout;\n","import React, { FunctionComponent, KeyboardEvent, useLayoutEffect, useRef, useState } from 'react';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Checkbox,\n  Grid,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TextField,\n  Typography,\n  useTheme,\n} from '@material-ui/core';\nimport { Controller, FieldPath, useForm } from 'react-hook-form';\nimport { v4 as uuidv4 } from 'uuid';\nimport currency from 'currency.js';\nimport { nameToInitials } from './functions/utils';\nimport useAppData from './hooks/useAppData';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CallSplitIcon from '@material-ui/icons/CallSplit';\n\ninterface ItemEntryForm {\n  name: string;\n  cost: number;\n}\n\nconst itemEntryFormDefaults: Partial<ItemEntryForm> = {\n  name: '',\n  cost: undefined,\n};\n\nconst getVenmoPaymentLink = ({\n  txn = 'charge',\n  user = '',\n  amount,\n  note = 'Split by Rece',\n}: {\n  txn?: 'pay' | 'charge';\n  user?: string;\n  amount: number;\n  note?: string;\n}) => `venmo://paycharge?txn=${txn}&recipients=${user}&amount=${amount}&note=${note}`;\n\nconst ItemsTab: FunctionComponent = () => {\n  const {\n    setAppData,\n    appData: { items, people, personToItemsMap, itemToPeopleMap, tax, tip },\n    putItem,\n    removeItem,\n    splitItem,\n    handleSetItemPerson,\n    subTotal,\n    subTotalForPerson,\n    total,\n    taxForPerson,\n    tipForPerson,\n    totalForPerson,\n  } = useAppData();\n\n  const { control, handleSubmit, reset } = useForm<ItemEntryForm>({ defaultValues: itemEntryFormDefaults });\n\n  const nameFieldRef = useRef<HTMLInputElement | null>(null);\n  const costFieldRef = useRef<HTMLInputElement | null>(null);\n\n  const handleOnSubmit = ({ name, cost }: ItemEntryForm) => {\n    const newItem = {\n      id: uuidv4(),\n      name,\n      cost,\n    };\n    putItem(newItem);\n    reset(itemEntryFormDefaults);\n    nameFieldRef.current?.focus();\n  };\n\n  const handleOnKeyDown = (name: FieldPath<ItemEntryForm>) => (event: KeyboardEvent<HTMLInputElement>) => {\n    if (event.code === 'Enter') {\n      if (name === 'name') {\n        costFieldRef.current?.focus();\n      } else if (name === 'cost') {\n        handleSubmit(handleOnSubmit)(event);\n      }\n    }\n  };\n\n  const theme = useTheme();\n\n  return (\n    <>\n      <Typography>Enter Receipt Items</Typography>\n      <Grid container spacing={4}>\n        <Grid item xs={12}>\n          <form onSubmit={handleSubmit(handleOnSubmit)}>\n            <Grid container spacing={2} alignItems={'flex-end'}>\n              <Grid item xs={12} md={6}>\n                <Controller\n                  control={control}\n                  name={'name'}\n                  render={({ field }) => (\n                    <TextField\n                      {...field}\n                      inputRef={(ref) => {\n                        nameFieldRef.current = ref;\n                        field.ref(ref);\n                      }}\n                      label=\"Item Name\"\n                      fullWidth\n                      onKeyDown={handleOnKeyDown('name')}\n                    />\n                  )}\n                />\n              </Grid>\n              <Grid item xs={12} md={5}>\n                <Controller\n                  control={control}\n                  name={'cost'}\n                  render={({ field }) => (\n                    <TextField\n                      {...field}\n                      inputRef={(ref) => {\n                        costFieldRef.current = ref;\n                        field.ref(ref);\n                      }}\n                      label=\"Cost\"\n                      fullWidth\n                      onKeyDown={handleOnKeyDown('cost')}\n                      type={'number'}\n                    />\n                  )}\n                  rules={{ required: true, min: 0 }}\n                />\n              </Grid>\n              <Grid item xs={12} md={1}>\n                <Button variant={'contained'} color={'primary'} fullWidth>\n                  Add\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Grid>\n        <Grid item xs={12}>\n          <Box style={{ overflow: 'auto', position: 'relative' }}>\n            <Table>\n              <TableHead>\n                <TableRow style={{ position: 'sticky', top: 0, backgroundColor: 'white', zIndex: 101 }}>\n                  <TableCell\n                    style={{ position: 'sticky', left: 0, backgroundColor: 'white', zIndex: 100, minWidth: 100 }}\n                  >\n                    Name\n                  </TableCell>\n                  <TableCell style={{ minWidth: 200 }}>Cost</TableCell>\n                  <TableCell style={{ width: 1 }} />\n                  {people.map((person) => (\n                    <TableCell key={person.id} style={{ width: 1 }}>\n                      <Avatar style={{ height: 24, width: 24, fontSize: 12 }}>{nameToInitials(person.name)}</Avatar>\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {items.map((item) => (\n                  <TableRow key={item.id}>\n                    <TableCell\n                      style={{\n                        position: 'sticky',\n                        left: 0,\n                        // backgroundColor: 'white',\n                        zIndex: 100,\n                        whiteSpace: 'nowrap',\n                        paddingTop: 0,\n                        paddingBottom: 0,\n                        backgroundColor:\n                          (itemToPeopleMap[item.id]?.length || 0) === 0 ? theme.palette.warning.light : 'white',\n                      }}\n                    >\n                      {item.name}\n                    </TableCell>\n                    <TableCell style={{ paddingTop: 0, paddingBottom: 0 }}>\n                      <EditableNumberField\n                        value={item.cost}\n                        onChange={(value) => putItem({ ...item, cost: value })}\n                        formatValue={(value) => currency(value).format()}\n                      />\n                    </TableCell>\n                    <TableCell style={{ paddingTop: 0, paddingBottom: 0 }}>\n                      <Box style={{ display: 'flex' }}>\n                        <IconButton\n                          size={'small'}\n                          edge=\"end\"\n                          onClick={() => splitItem(item.id)}\n                          style={{ marginRight: theme.spacing(1) }}\n                        >\n                          <CallSplitIcon color={'primary'} />\n                        </IconButton>\n                        <IconButton\n                          size={'small'}\n                          edge=\"end\"\n                          onClick={() => {\n                            if (confirm(\"Are you sure you'd like to remove this item?\")) removeItem(item.id);\n                          }}\n                        >\n                          <DeleteIcon color={'error'} />\n                        </IconButton>\n                      </Box>\n                    </TableCell>\n                    {people.map((person) => (\n                      <TableCell\n                        key={person.id}\n                        style={{\n                          paddingTop: 0,\n                          paddingBottom: 0,\n                        }}\n                      >\n                        <Checkbox\n                          checked={personToItemsMap[person.id]?.includes(item.id) || false}\n                          onChange={(event) => handleSetItemPerson(item.id, person.id, event.target.checked)}\n                        />\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))}\n                {/* SubTotal Row */}\n                <TableRow>\n                  <TableCell\n                    style={{\n                      position: 'sticky',\n                      left: 0,\n                      backgroundColor: 'white',\n                      zIndex: 100,\n                      whiteSpace: 'nowrap',\n                      paddingTop: 0,\n                      paddingBottom: 0,\n                    }}\n                  >\n                    Subtotal\n                  </TableCell>\n                  <TableCell style={{ paddingTop: 0, paddingBottom: 0 }}>\n                    <Button disabled style={{ color: 'inherit' }}>\n                      {currency(subTotal).format()}\n                    </Button>\n                  </TableCell>\n                  <TableCell />\n                  {people.map((person) => (\n                    <TableCell key={person.id} style={{ paddingTop: 0, paddingBottom: 0 }}>\n                      <Button disabled style={{ color: 'inherit' }}>\n                        {currency(subTotalForPerson(person.id)).format()}\n                      </Button>\n                    </TableCell>\n                  ))}\n                </TableRow>\n                {/* Tax Row */}\n                <TableRow>\n                  <TableCell\n                    style={{\n                      position: 'sticky',\n                      left: 0,\n                      zIndex: 100,\n                      whiteSpace: 'nowrap',\n                      paddingTop: 0,\n                      paddingBottom: 0,\n                      backgroundColor: tax === 0 ? theme.palette.warning.light : 'white',\n                    }}\n                  >\n                    <Box\n                      style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                      }}\n                    >\n                      <Box style={{ marginRight: 10 }}>Tax</Box>\n                      <EditableNumberField\n                        value={subTotal > 0 ? tax / subTotal : 0}\n                        onChange={(taxPct) => setAppData((prev) => ({ ...prev, tax: subTotal * (taxPct / 100.0) }))}\n                        formatValue={(value) => `${(value * 100).toFixed(2)}%`}\n                      />\n                    </Box>\n                  </TableCell>\n                  <TableCell style={{ paddingTop: 0, paddingBottom: 0 }}>\n                    <EditableNumberField\n                      value={tax}\n                      onChange={(tax) => setAppData((prev) => ({ ...prev, tax }))}\n                      formatValue={(value) => currency(value).format()}\n                    />\n                  </TableCell>\n                  <TableCell />\n                  {people.map((person) => (\n                    <TableCell key={person.id} style={{ paddingTop: 0, paddingBottom: 0 }}>\n                      <Button disabled style={{ color: 'inherit' }}>\n                        {currency(taxForPerson(person.id)).format()}\n                      </Button>\n                    </TableCell>\n                  ))}\n                </TableRow>\n                {/* Tip Row */}\n                <TableRow>\n                  <TableCell\n                    style={{\n                      position: 'sticky',\n                      left: 0,\n                      backgroundColor: tip === 0 ? theme.palette.warning.light : 'white',\n                      zIndex: 100,\n                      whiteSpace: 'nowrap',\n                      paddingTop: 0,\n                      paddingBottom: 0,\n                    }}\n                  >\n                    <Box\n                      style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                      }}\n                    >\n                      <Box style={{ marginRight: 10 }}>Tip</Box>\n                      <EditableNumberField\n                        value={subTotal > 0 ? tip / subTotal : 0}\n                        onChange={(tipPct) => setAppData((prev) => ({ ...prev, tip: subTotal * (tipPct / 100.0) }))}\n                        formatValue={(value) => `${(value * 100).toFixed(2)}%`}\n                      />\n                    </Box>\n                  </TableCell>\n                  <TableCell style={{ paddingTop: 0, paddingBottom: 0 }}>\n                    <EditableNumberField\n                      value={tip}\n                      onChange={(tip) => setAppData((prev) => ({ ...prev, tip }))}\n                      formatValue={(value) => currency(value).format()}\n                    />\n                  </TableCell>\n                  <TableCell />\n                  {people.map((person) => (\n                    <TableCell key={person.id} style={{ paddingTop: 0, paddingBottom: 0 }}>\n                      <Button disabled style={{ color: 'inherit' }}>\n                        {currency(tipForPerson(person.id)).format()}\n                      </Button>\n                    </TableCell>\n                  ))}\n                </TableRow>\n                {/* Total Row */}\n                <TableRow>\n                  <TableCell\n                    style={{\n                      position: 'sticky',\n                      left: 0,\n                      backgroundColor: 'white',\n                      zIndex: 100,\n                      whiteSpace: 'nowrap',\n                      paddingTop: 0,\n                      paddingBottom: 0,\n                    }}\n                  >\n                    Total\n                  </TableCell>\n                  <TableCell style={{ paddingTop: 0, paddingBottom: 0 }}>\n                    <Button disabled style={{ color: 'inherit' }}>\n                      {currency(total).format()}\n                    </Button>\n                  </TableCell>\n                  <TableCell />\n                  {people.map((person) => (\n                    <TableCell key={person.id} style={{ paddingTop: 0, paddingBottom: 0 }}>\n                      <Button\n                        onClick={() => {\n                          window.location.href = getVenmoPaymentLink({ amount: totalForPerson(person.id) });\n                        }}\n                      >\n                        {currency(totalForPerson(person.id)).format()}\n                      </Button>\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableBody>\n            </Table>\n          </Box>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default ItemsTab;\n\nconst EditableNumberField: FunctionComponent<{\n  value: number;\n  onChange: (value: number) => void;\n  formatValue?: (value: number) => string;\n}> = ({ value, onChange, formatValue = (value) => `${value}` }) => {\n  const [isEditMode, setIsEditMode] = useState(false);\n  const textFieldRef = useRef<HTMLInputElement>();\n\n  useLayoutEffect(() => {\n    if (isEditMode) textFieldRef.current?.focus();\n  }, [isEditMode]);\n\n  return isEditMode ? (\n    <TextField\n      placeholder={formatValue(value)}\n      onChange={(event) => onChange(parseFloat(event.target.value))}\n      type={'number'}\n      onBlur={() => setIsEditMode(false)}\n      onKeyDown={(event) => {\n        if (['Enter', 'Escape'].includes(event.code)) setIsEditMode(false);\n      }}\n      inputRef={textFieldRef}\n      style={{ width: 80, marginLeft: 10 }}\n    />\n  ) : (\n    <Button onClick={() => setIsEditMode(true)}>{formatValue(value)}</Button>\n  );\n};\n","import React, { FunctionComponent, KeyboardEvent, useState } from 'react';\nimport {\n  Avatar,\n  Button,\n  Grid,\n  IconButton,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemSecondaryAction,\n  ListItemText,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport { v4 as uuidv4 } from 'uuid';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { nameToInitials } from './functions/utils';\nimport useAppData from './hooks/useAppData';\n\nconst PeopleTab: FunctionComponent = () => {\n  const {\n    appData: { people },\n    addPerson,\n    removePerson,\n  } = useAppData();\n\n  const [personNameInput, setPersonNameInput] = useState('');\n\n  const handleAddPerson = (name: string) => {\n    if (!name) return;\n    addPerson({ id: uuidv4(), name: name.trim() });\n    setPersonNameInput('');\n  };\n\n  const handleOnKeyDown = (event: KeyboardEvent<HTMLInputElement>) => {\n    if (event.code === 'Enter') {\n      handleAddPerson(personNameInput);\n    }\n  };\n\n  return (\n    <>\n      <Typography>Enter People</Typography>\n      <Grid container spacing={4}>\n        <Grid item xs={12}>\n          <Grid container spacing={2} alignItems={'flex-end'}>\n            <Grid item xs={12} md={11}>\n              <TextField\n                value={personNameInput}\n                onChange={(event) => setPersonNameInput(event.target.value)}\n                label=\"Person Name\"\n                fullWidth\n                onKeyDown={handleOnKeyDown}\n              />\n            </Grid>\n            <Grid item xs={12} md={1}>\n              <Button\n                variant={'contained'}\n                color={'primary'}\n                onClick={() => handleAddPerson(personNameInput)}\n                fullWidth\n              >\n                Add\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12}>\n          <List>\n            {people.map((person) => (\n              <ListItem key={person.id}>\n                <ListItemAvatar>\n                  <Avatar>{nameToInitials(person.name)}</Avatar>\n                </ListItemAvatar>\n                <ListItemText primary={person.name} />\n                <ListItemSecondaryAction>\n                  {/*<IconButton edge=\"end\">*/}\n                  {/*  <EditIcon />*/}\n                  {/*</IconButton>*/}\n                  <IconButton edge=\"end\" onClick={() => removePerson(person.id)}>\n                    <DeleteIcon />\n                  </IconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n            ))}\n          </List>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default PeopleTab;\n","import React, { FunctionComponent, useState } from 'react';\nimport { Container, Tab, Tabs } from '@material-ui/core';\nimport Layout from './Layout';\nimport ItemsTab from './ItemsTab';\nimport PeopleTab from './PeopleTab';\nimport { AppDataContextProvider } from './hooks/useAppData';\n\nconst App: FunctionComponent = () => {\n  const [currentTab, setCurrentTab] = useState(0);\n\n  return (\n    <div>\n      <AppDataContextProvider>\n        <Layout>\n          <Container>\n            <Tabs\n              value={currentTab}\n              onChange={(event, value) => setCurrentTab(value)}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              centered\n              style={{ marginBottom: 20 }}\n            >\n              <Tab label=\"Items\" />\n              <Tab label=\"People\" />\n            </Tabs>\n            {currentTab === 0 && <ItemsTab />}\n            {currentTab === 1 && <PeopleTab />}\n          </Container>\n        </Layout>\n      </AppDataContextProvider>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { CssBaseline } from '@material-ui/core';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}